---
# Source: provisioner/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: local-static-provisioner
  namespace: default
  labels:
    helm.sh/chart: provisioner-3.0.0
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: local-static-provisioner
---
# Source: provisioner/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: local-static-provisioner-config
  namespace: default
  labels:
<<<<<<< HEAD
<<<<<<< HEAD
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-3.0.0
>>>>>>> generated new example files as chart version changed
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: local-static-provisioner
>>>>>>> generated new example files from helm hack/generated_examples.sh
data:
  storageClassMap: |
    local-storage:
       hostDir: /mnt/disks
       mountDir: /mnt/disks
       blockCleanerCommand:
         - "/scripts/shred.sh"
         - "2"
       volumeMode: Block
---
<<<<<<< HEAD
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: local-volume-provisioner
  namespace: default
  labels:
    app: local-volume-provisioner
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: provisioner-2.3.4
spec:
  selector:
    matchLabels:
      app: local-volume-provisioner
  template:
    metadata:
      labels:
        app: local-volume-provisioner
    spec:
      serviceAccountName: local-storage-admin
      nodeSelector:
        localVolume: present
      containers:
        - image: "quay.io/external_storage/local-volume-provisioner:v2.3.4"
          name: provisioner
          securityContext:
            privileged: true
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JOB_CONTAINER_IMAGE
            value: "quay.io/external_storage/local-volume-provisioner:v2.3.4"
          volumeMounts:
            - mountPath: /etc/provisioner/config
              name: provisioner-config
              readOnly: true
            - mountPath: /dev
              name: provisioner-dev
            - mountPath: /mnt/disks
              name: local-storage
              mountPropagation: "HostToContainer"
      volumes:
        - name: provisioner-config
          configMap:
            name: local-provisioner-config
        - name: provisioner-dev
          hostPath:
            path: /dev
        - name: local-storage
          hostPath:
            path: /mnt/disks
=======
# Source: provisioner/templates/storageclass.yaml
<<<<<<< HEAD

>>>>>>> generated new example files from helm hack/generated_examples.sh
---
=======
>>>>>>> changed generated_examples to helm v3
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
  labels:
<<<<<<< HEAD
<<<<<<< HEAD
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: provisioner-2.3.4
=======
    app.kubernetes.io/managed-by: "Tiller"
=======
    app.kubernetes.io/managed-by: "Helm"
>>>>>>> changed generated_examples to helm v3
    app.kubernetes.io/instance: "local-static-provisioner"
<<<<<<< HEAD
    helm.sh/chart: provisioner-2.3.4
>>>>>>> generated new example files from helm hack/generated_examples.sh
=======
    helm.sh/chart: provisioner-3.0.0
>>>>>>> generated new example files as chart version changed
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
---
# Source: provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: local-static-provisioner-node-clusterrole
  labels:
<<<<<<< HEAD
<<<<<<< HEAD
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-3.0.0
>>>>>>> generated new example files as chart version changed
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: local-static-provisioner
<<<<<<< HEAD
>>>>>>> generated new example files from helm hack/generated_examples.sh

=======
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get"]
>>>>>>> changed generated_examples to helm v3
---
# Source: provisioner/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: local-static-provisioner-pv-binding
  labels:
<<<<<<< HEAD
<<<<<<< HEAD
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-3.0.0
>>>>>>> generated new example files as chart version changed
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: local-static-provisioner
>>>>>>> generated new example files from helm hack/generated_examples.sh
subjects:
- kind: ServiceAccount
  name: local-static-provisioner
  namespace: default
roleRef:
  kind: ClusterRole
  name: system:persistent-volume-provisioner
  apiGroup: rbac.authorization.k8s.io
---
<<<<<<< HEAD
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: local-static-provisioner-node-clusterrole
  labels:
<<<<<<< HEAD
<<<<<<< HEAD
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-3.0.0
>>>>>>> generated new example files as chart version changed
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: local-static-provisioner
>>>>>>> generated new example files from helm hack/generated_examples.sh
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get"]
---
=======
# Source: provisioner/templates/rbac.yaml
>>>>>>> changed generated_examples to helm v3
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: local-static-provisioner-node-binding
  labels:
<<<<<<< HEAD
<<<<<<< HEAD
    heritage: "Tiller"
    release: "RELEASE-NAME"
    chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-2.3.4
=======
    helm.sh/chart: provisioner-3.0.0
>>>>>>> generated new example files as chart version changed
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: local-static-provisioner
>>>>>>> generated new example files from helm hack/generated_examples.sh
subjects:
- kind: ServiceAccount
  name: local-static-provisioner
  namespace: default
roleRef:
  kind: ClusterRole
  name: local-static-provisioner-node-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: provisioner/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: local-static-provisioner
  namespace: default
  labels:
    helm.sh/chart: provisioner-3.0.0
    app.kubernetes.io/name: provisioner
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: local-static-provisioner
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: provisioner
      app.kubernetes.io/instance: local-static-provisioner
  template:
    metadata:
      labels:
        app.kubernetes.io/name: provisioner
        app.kubernetes.io/instance: local-static-provisioner
    spec:
      serviceAccountName: local-static-provisioner
      nodeSelector:
        localVolume: present
      containers:
        - image: "quay.io/external_storage/local-volume-provisioner:v2.3.3"
          name: provisioner
          securityContext:
            privileged: true
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JOB_CONTAINER_IMAGE
            value: "quay.io/external_storage/local-volume-provisioner:v2.3.3"
          volumeMounts:
            - mountPath: /etc/provisioner/config
              name: provisioner-config
              readOnly: true
            - mountPath: /dev
              name: provisioner-dev
            - mountPath: /mnt/disks
              name: local-storage
              mountPropagation: "HostToContainer"
      volumes:
        - name: provisioner-config
          configMap:
            name: local-static-provisioner-config
        - name: provisioner-dev
          hostPath:
            path: /dev
        - name: local-storage
          hostPath:
            path: /mnt/disks
