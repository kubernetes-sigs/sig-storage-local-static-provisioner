{{- if .Values.cleanupController.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "provisioner.fullname" . }}-cleanup
  namespace: {{ .Release.Namespace }}
  labels:
    helm.sh/chart: {{ template "provisioner.chart" . }}
    app.kubernetes.io/name: {{ template "provisioner.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "provisioner.name" . }}-cleanup
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "provisioner.name" . }}-cleanup
        app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.cleanupController.podLabels }}
{{ .Values.cleanupController.podLabels | toYaml | trim | indent 8 }}
{{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
{{- if .Values.cleanupController.podAnnotations }}
{{ .Values.cleanupController.podAnnotations | toYaml | trim | indent 8 }}
{{- end }}
    spec:
      serviceAccountName: {{ template "provisioner.serviceAccountName" . }}
{{- if .Values.cleanupController.priorityClassName }}
      priorityClassName: {{.Values.cleanupController.priorityClassName}}
{{- end }}
      nodeSelector:
        kubernetes.io/os: linux
{{- if .Values.cleanupController.nodeSelector }}
        {{ toYaml .Values.cleanupController.nodeSelector | nindent 8 }}
{{- end }}
{{- if .Values.cleanupController.tolerations }}
      tolerations:
        {{ toYaml .Values.cleanupController.tolerations | nindent 8 }}
{{- end }}
{{- if .Values.cleanupController.affinity }}
      affinity:
        {{ toYaml .Values.cleanupController.affinity | nindent 8 }}
{{- end }}
{{- with .Values.cleanupController.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
{{- end }}
      containers:
        - name: cleanup-controller
          image: {{ .Values.cleanupController.image }}
          args:
            - "--storageclass-names={{ template "provisioner.cleanupControllerStorageClassList" . }}"
          {{- with .Values.cleanupController.args }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.cleanupController.imagePullPolicy }}
          imagePullPolicy: {{ .Values.cleanupController.imagePullPolicy }}
          {{- end }}
          securityContext:
            privileged: {{ .Values.cleanupController.privileged }}
{{- if .Values.cleanupController.resources }}
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
{{- end }}
          ports:
            - name: metrics
              containerPort: 8080
          {{- with .Values.cleanupController.additionalVolumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.cleanupController.additionalVolumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}