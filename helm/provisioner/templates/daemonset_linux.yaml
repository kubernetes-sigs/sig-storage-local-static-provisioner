---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "provisioner.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    helm.sh/chart: {{ template "provisioner.chart" . }}
    app.kubernetes.io/name: {{ template "provisioner.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "provisioner.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "provisioner.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ .Values.podLabels | toYaml | trim | indent 8 }}
{{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ .Values.podAnnotations | toYaml | trim | indent 8 }}
{{- end }}
    spec:
{{- if .Values.hostPID }}
      hostPID: true
{{- end }}
      serviceAccountName: {{ template "provisioner.serviceAccountName" . }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{.Values.priorityClassName}}
{{- end }}
      nodeSelector:
        kubernetes.io/os: linux
{{- if .Values.nodeSelector }}
        {{ toYaml .Values.nodeSelector | nindent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
        {{ toYaml .Values.tolerations | nindent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
        {{ toYaml .Values.affinity | nindent 8 }}
{{- end }}
{{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
{{- end }}
      containers:
        - name: provisioner
          image: {{ .Values.image }}
          {{- if .Values.imagePullPolicy }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- end }}
          securityContext:
            privileged: {{ .Values.privileged }}
{{- if .Values.resources }}
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
{{- end }}
          env:
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JOB_CONTAINER_IMAGE
            value: {{ .Values.image }}
          {{- if .Values.kubeConfigEnv }}
          - name: KUBECONFIG
            value: {{.Values.kubeConfigEnv}}
          {{- end }}
          ports:
          - name: metrics
            containerPort: 8080
          volumeMounts:
            - name: provisioner-config
              mountPath: /etc/provisioner/config
              readOnly: true
          {{- if .Values.mountDevVolume }}
            - name: provisioner-dev
              mountPath: /dev
          {{- end }}
          {{- range .Values.classes }}
            - name: {{ .name }}
              mountPath: {{ default .hostDir .mountDir }}
              mountPropagation: HostToContainer
          {{- end }}
          {{- with .Values.additionalVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: provisioner-config
          configMap:
            name: {{ template "provisioner.fullname" . }}-config
      {{- if .Values.mountDevVolume }}
        - name: provisioner-dev
          hostPath:
            path: /dev
      {{- end }}
      {{- range .Values.classes }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostDir }}
      {{- end }}
      {{- with .Values.additionalVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
